{
  "name": "photoset-grid",
  "version": "0.0.0",
  "description": "jQuery plugin to arrange images into a flexible grid",
  "main": "jquery.photoset-grid.min.js",
  "dependencies": {
    "jquery": ">=1.5"
  },
  "gitHead": "876ec7d44fd657297f5d9c9a6c0feb6fcf9d3eae",
  "readme": "# Photoset Grid\n\nA simple jQuery plugin to arrange images into a flexible grid, based on Tumblr's photoset feature. Originally the plugin was created for our [Style Hatch](http://stylehatch.co) Tumblr themes as a way to use the photoset grid in responsive layouts, but we have since expanded it for use outside of the themes.\n\n## Demo\n\nView the [photoset grid Github page](http://stylehatch.github.com/photoset-grid) for all the examples or jump straight to the following demos: \n\n- [Basic usage](http://stylehatch.github.com/photoset-grid#demo-basic-usage)\n- [Custom options](http://stylehatch.github.com/photoset-grid#demo-custom-options)\n- [Adding a lightbox viewer](http://stylehatch.github.com/photoset-grid#demo-lightbox)\n- [Using photoset grid in a Tumblr theme](http://stylehatch.github.com/photoset-grid#demo-tumblr)\n\n## Usage\n\nApply the photo set grid layout to a selected `div` containing images for the grid. \n\nThe only markup requirement is a `data-layout` attribute on the selected `div`. `data-layout` should contain a string of numbers representing the number of columns for each row. \n\n**Understanding data-layout:**\n\n- `data-layout=\"2331\"` 1st row has 2 images, 2nd row has 3 images, 3rd row has 3 images, and 4th row has 1 image. Total of 9 images.\n- `data-layout=\"13\"` 1st row has 1 image and 2nd row has 3 images.\n\n#### Basic Usage\n\nSimply call `photosetGrid();` on a div with the `data-layout` specified and a number of images inside.\n\n##### HTML:\n\t<div class=\"photoset-grid\" data-layout=\"13\">\n\t\t<img src=\"image1.jpg\">\n\t\t<img src=\"image2.jpg\">\n\t\t<img src=\"image3.jpg\">\n\t\t<img src=\"image4.jpg\">\n\t</div>\n\t\n##### Javascript:\n\t$('.photoset-grid').photosetGrid();\n#### Custom Options\n\nBeyond the basic usage, you can set a number of optional arguments including callback functions that are useful for adding a lightbox for high resolution images.\n\n**arguments**\n\n- `width` - `string` Change the width that the photo set grid will be rendered at. Default: `100%` *automatically fits its container for responsive layouts*\n- `layout` - `string` Manually set a string of numbers to specify the number of images each row contains. Default: `null` *generates a stacked layout of one image per row*\n- `gutter` - `string` Set the pixel width between the columns and rows. Default: `0px`\n- `highresLinks` - `boolean` Set to `true` to automatically swap out the default image `src` with the `data-highres` attribute once the image is wider than `lowresWidth`. This will also wrap each image with an `a` vs. `div` element. Default: `false`\n- `lowresWidth` - `number` Sets the width where the default image is swapped out for the high resolution image. Default: `500`\n- `rel` - `string` This optional setting useful for lightbox viewers applies a common `rel` attribute to the anchor tags wrapping the images.\n- `onInit` - `function` Define a function to be called when the plugin is initialized.\n- `onComplete` - `function` Define a function to be called when the plugin has completed the grid layout.\n\n##### HTML:\n\t<div class=\"photoset-grid\" style=\"visibility: hidden;\">\n\t\t<img src=\"image1.jpg\" data-highres=\"highres-image1.jpg\">\n\t\t<img src=\"image2.jpg\" data-highres=\"highres-image2.jpg\">\n\t\t<img src=\"image3.jpg\" data-highres=\"highres-image3.jpg\">\n\t\t<img src=\"image4.jpg\" data-highres=\"highres-image4.jpg\">\n\t\t<img src=\"image5.jpg\" data-highres=\"highres-image5.jpg\">\n\t\t<img src=\"image6.jpg\" data-highres=\"highres-image6.jpg\">\n\t\t<img src=\"image7.jpg\" data-highres=\"highres-image7.jpg\">\n\t</div>\n\t\n##### Javascript:\n\t$('.photoset-grid').photosetGrid({\n\t\tlayout: '232',\n\t\twidth: '100%',\n\t\tgutter: '5px',\n\t\thighresLinks: true,\n\t\tlowresWidth: 300,\n\t\trel: 'gallery-01',\n\t\t\n\t\tonInit: function(){},\n\t\tonComplete: function(){\n\t\t\n\t\t\t$('.photoset-grid').css({\n\t\t\t\t'visiblity': 'visible'\n\t\t\t});\n\t\t\t\n\t\t}\n\t});\n\n## Installation\n\n**Bower package manager**\n\nYou can easily install photoset-grid as a [Bower](https://github.com/twitter/bower) package by running:\n\n\t$ bower install photoset-grid\n\n## Credits\n\n* [Jonathan Moore](http://github.com/jonathanmoore) - *[@moore](http://twitter.com/moore) | [jonathanmoore.com](http://jonathanmoore.com)*\n* [Mikey Wills](http://muke.me) - *[@mukealicious](https://twitter.com/mukealicious) | [muke.me](http://muke.me)*\n* *Additional*\n\t* [Thomas Sardyha](https://github.com/Darsain) & [David DeSandro](https://github.com/desandro/) - [desandro/imagesloaded](https://github.com/desandro/imagesloaded)\n\t* [Louis-Rémi Babé](https://github.com/louisremi/) - [louisremi/jquery-smartresize](https://github.com/louisremi/jquery-smartresize)\n",
  "readmeFilename": "README.markdown",
  "_id": "photoset-grid@1.0.0",
  "commit": "876ec7d44fd657297f5d9c9a6c0feb6fcf9d3eae",
  "repository": {
    "type": "git",
    "url": "git://github.com/stylehatch/photoset-grid.git"
  }
}